<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.hpe.iot.dc</groupId>
		<artifactId>device-controllers</artifactId>
		<version>0.0.1-SNAPSHOT</version>
	</parent>
	<artifactId>device-controllers-ear</artifactId>
	<packaging>ear</packaging>
	<dependencies>
		<!-- This ear is created by adding common jars (which doesn't depend up 
			on slf4j as transitive dependency) under lib directory of ear. Remaining 
			jars which depends on slf4j logging frameworks been added as under individual 
			wars. This approach is been taken to avoid issue of output logging is going 
			to only one log file even though output log file configuration for each DC 
			is configured separately . Above issue might be happening due to loading 
			of log configuration using Spring from web.xml using org.springframework.web.util.Log4jConfigListener 
			Class , same class loader for all war files or it might be inherited from 
			parent class loader(EAR LEVEL CLASSLOADER) during war initialization. THIS 
			ISSUE NEED TO FURTHER ANALIYZED. -->

		<!-- Local common jars -->
		<dependency>
			<groupId>m2m-common</groupId>
			<artifactId>m2m-common</artifactId>
		</dependency>
		<!-- Server Environment -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
		</dependency>
		<dependency>
			<groupId>javax.enterprise.concurrent</groupId>
			<artifactId>javax.enterprise.concurrent-api</artifactId>
		</dependency>
		<dependency>
			<groupId>javax.annotation</groupId>
			<artifactId>jsr250-api</artifactId>
		</dependency>
		<dependency>
			<groupId>javax.inject</groupId>
			<artifactId>javax.inject</artifactId>
		</dependency>
		<!-- Utility or Others -->
		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
		</dependency>
		<dependency>
			<groupId>javax.xml.bind</groupId>
			<artifactId>jaxb-api</artifactId>
		</dependency>
		<dependency>
			<groupId>javax.xml</groupId>
			<artifactId>jaxb-impl</artifactId>
		</dependency>
		<dependency>
			<groupId>org.codehaus.groovy</groupId>
			<artifactId>groovy-all</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
		</dependency>
		<dependency>
			<groupId>com.hpe.iot.dc</groupId>
			<artifactId>http-dc-web</artifactId>
			<version>${project.version}</version>
			<type>war</type>
		</dependency>
		<dependency>
			<groupId>com.hpe.iot.dc</groupId>
			<artifactId>tcpdc</artifactId>
			<version>${project.version}</version>
			<type>war</type>
		</dependency>
	</dependencies>
	<build>
		<finalName>${project.artifactId}</finalName>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-ear-plugin</artifactId>
				<version>2.10.1</version>
				<!-- configuring the ear plugin -->
				<configuration>
					<defaultLibBundleDir>lib/</defaultLibBundleDir>
					<skinnyWars>true</skinnyWars>
					<modules>
						<webModule>
							<groupId>com.hpe.iot.dc</groupId>
							<artifactId>http-dc-web</artifactId>
							<uri>httpdc.war</uri>
						</webModule>
						<webModule>
							<groupId>com.hpe.iot.dc</groupId>
							<artifactId>tcpdc</artifactId>
							<uri>tcpdc.war</uri>
						</webModule>
					</modules>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>