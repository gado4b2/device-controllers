<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
				http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
				http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
				http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd
				http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

	<context:annotation-config />
	<context:component-scan base-package="com.hpe.iot" />
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="ignoreUnresolvablePlaceholders" value="true" />
		<property name="locations">
			<list>
				<value>file://${jboss.home.dir}/standalone/configuration/DC/trinetradc/trinetraDC.properties
				</value>
				<value>file://${jboss.home.dir}/standalone/configuration/DC/trinetradc/iot-broker.properties
				</value>
				<value>file://${jboss.home.dir}/standalone/configuration/DC/trinetradc/activemq.properties
				</value>
				<value>file://${jboss.home.dir}/standalone/configuration/DC/trinetradc/kafka.properties
				</value>
			</list>

		</property>
	</bean>



	<jee:jndi-lookup id="myManagedExecutorService"
		jndi-name="java:jboss/ee/concurrency/executor/default" />

	<bean id="uplinkDeviceDataConverters" factory-bean="uplinkDeviceDataConverterHolder"
		factory-method="getUplinkDeviceDataConverters" />

	<bean id="uplinkDeviceDataConverterFactory" depends-on="uplinkDeviceDataConverterHolder"
		class="com.hpe.iot.dc.southbound.converter.inflow.factory.impl.UplinkDeviceDataConverterFactoryImpl">
		<constructor-arg index="0" ref="uplinkDeviceDataConverters" />
	</bean>

	<bean id="messageServices" factory-bean="messageServiceHolder"
		factory-method="getMessageServices" />

	<bean id="uplinkMessageServiceFactory" depends-on="messageServiceHolder"
		class="com.hpe.iot.dc.southbound.service.inflow.factory.impl.UplinkMessageServiceFactoryImpl">
		<constructor-arg index="0" ref="messageServices" />
	</bean>

	<bean
		class="com.hpe.iot.dc.southbound.service.inflow.activator.SouthBoundServiceActivator">
		<constructor-arg index="0" ref="uplinkMessageServiceFactory" />
	</bean>

	<bean id="activeMQProducerService"
		class="com.hpe.broker.service.producer.activemq.ActiveMQProducerService">
		<constructor-arg index="0" value="${activemq.brokerURL}" />
		<constructor-arg index="1" value="${activemq.usename}" />
		<constructor-arg index="2" value="${activemq.password}" />
	</bean>

	<bean id="kafkaProducerService"
		class="com.hpe.broker.service.producer.kafka.KafkaProducerService">
		<constructor-arg index="0" value="${kafka.brokerURL}" />
		<constructor-arg index="1" value="${kafka.key.serializer}" />
		<constructor-arg index="2" value="${kafka.value.serializer}" />
		<constructor-arg index="3" value="${kafka.producerid}" />
	</bean>

	<util:list id="brokerProducerServices" list-class="java.util.ArrayList"
		value-type="com.hpe.broker.service.producer.BrokerProducerService">
		<ref bean="activeMQProducerService" />
		<ref bean="kafkaProducerService" />
	</util:list>

	<bean id="brokerProducerServiceFactory"
		class="com.hpe.broker.service.producer.factory.impl.BrokerProducerServiceFactoryImpl"
		init-method="startAllServices" destroy-method="stopAllServices">
		<constructor-arg index="0" ref="brokerProducerServices" />
	</bean>

	<bean id="activeMQConsumerService"
		class="com.hpe.broker.service.consumer.activemq.ActiveMQConsumerService">
		<constructor-arg index="0" value="${activemq.brokerURL}" />
		<constructor-arg index="1" value="${activemq.usename}" />
		<constructor-arg index="2" value="${activemq.password}" />
	</bean>

	<bean id="kafkaConsumerService"
		class="com.hpe.broker.service.consumer.kafka.KafkaConsumerService">
		<constructor-arg index="0" value="${kafka.brokerURL}" />
		<constructor-arg index="1" value="${kafka.key.deserializer}" />
		<constructor-arg index="2" value="${kafka.value.deserializer}" />
		<constructor-arg index="3" value="${kafka.consumerGroupId}" />
		<constructor-arg index="4" ref="myManagedExecutorService" />
	</bean>

	<util:list id="brokerConsumerServices" list-class="java.util.ArrayList"
		value-type="com.hpe.broker.service.consumer.BrokerConsumerService">
		<ref bean="activeMQConsumerService" />
		<ref bean="kafkaConsumerService" />
	</util:list>

	<bean id="brokerConsumerServiceFactory"
		class="com.hpe.broker.service.consumer.factory.impl.BrokerConsumerServiceFactoryImpl"
		init-method="startAllServices" destroy-method="stopAllServices">
		<constructor-arg index="0" ref="brokerConsumerServices" />
	</bean>

	<bean id="iotPublisherHandler"
		class="com.hpe.iot.dc.northbound.service.inflow.impl.IOTPublisherHandler">
		<constructor-arg index="0" ref="brokerProducerServiceFactory" />
		<constructor-arg index="1"
			value="${iot.device.uplink.destination}" />
		<constructor-arg index="2" value="${active.message.broker}" />
	</bean>

	<bean id="iotModelConverter"
		class="com.hpe.iot.dc.northbound.converter.inflow.impl.DefaultIOTModelConverterImpl">
		<constructor-arg index="0" ref="trinetraDeviceModel" />
	</bean>

	<bean id="iotPublisherService"
		class="com.hpe.iot.dc.northbound.service.inflow.impl.IOTPublisherServiceImpl">
		<constructor-arg
			type="com.hpe.iot.dc.northbound.service.inflow.impl.IOTPublisherHandler"
			ref="iotPublisherHandler" />
		<constructor-arg
			type="com.hpe.iot.dc.northbound.converter.inflow.IOTModelConverter"
			ref="iotModelConverter" />
	</bean>

</beans>
